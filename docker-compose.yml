# For local development, only database is running
#
# docker compose up -d
# uvicorn app.main:app --reload
#
services:
  api:
    container_name: {{project_slug}}
    platform: "linux/amd64"
    env_file:
      - env/docker.env
    image: "{{project_slug}}"
    build: 
      context: ../../
      dockerfile: infra/docker/django-ninja.Dockerfile
      args:
          PROJECT: {{project_slug}}
    # Run this contain as if it's in the terminal, useful for debugging
    tty: true
    # Mount local files into the container so we can update files inside the container
    volumes:
      - ../../libs:/libs
      - ./src:/code/src
    expose:
      - "8000"
    ports:
      - 0.0.0.0:8000:8000
    depends_on:
      - db

  db:
    container_name: {{project_slug}}_db
    restart: unless-stopped
    image: postgres:15
    volumes:
      - ./tools/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
      - ./tools:/code/tools
      - postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES={{project_slug}}_db,test_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    env_file:
      - env/docker.env
    ports:
      - "0.0.0.0:5432:5432"
    expose:
      - "5432"

  redis:
    container_name: {{project_slug}}_redis
    restart: unless-stopped
    image: redis:7-alpine
    ports:
      - "0.0.0.0:6379:6379"
    expose:
      - "6379"
    volumes:
      - redis_data:/data

  celery:
    container_name: {{project_slug}}_celery
    platform: "linux/amd64"
    env_file:
      - env/docker.env
    image: "{{project_slug}}"
    build: 
      context: ../../
      dockerfile: infra/docker/django-ninja.Dockerfile
      args:
          PROJECT: {{project_slug}}
    volumes:
      - ../../libs:/libs
      - ./src:/code/src
    command: celery -A main worker --loglevel=info
    depends_on:
      - redis
      - db

  celery-beat:
    container_name: {{project_slug}}_celeryat
    platform: "linux/amd64"
    env_file:
      - env/docker.env
    image: "{{project_slug}}"
    build: 
      context: ../../
      dockerfile: infra/docker/django-ninja.Dockerfile
      args:
          PROJECT: {{project_slug}}
    volumes:
      - ../../libs:/libs
      - ./src:/code/src
    command: celery -A main beat --loglevel=info
    depends_on:
      - redis
      - db

volumes:
  postgres_db:
  redis_data:
  
  
